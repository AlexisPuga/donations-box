{% from './lib/build-amount.njk' import buildAmount %}
{% from './lib/build-element.njk' import buildElement %}
{% set small = size == 'small' %}
{% set beneficiaryAlias = beneficiary.alias %}
{% set states = {
	'open': 'is-open',
	'headline': 'has-headline'
} %}
<link rel='stylesheet' href='/css/donation-box.min.css'/>
{# Always set states.open to show donations even if js is not being used. #}
<aside id='donation-box' data-theme='compact' class='d10x-c {{ states.open }} {{ states.headline if headline }}' data-states='{{ states | dump }}'>
	<header class='header'>
		<div class='beneficiary-icon-wrapper icon-wrapper'>
			{% set icon = beneficiary.icon %}
			{% set iconHref = icon.href or beneficiary.href %}
			<a href='{{ iconHref }}' target='_self' rel='noopener noreferrer'>
				{% if icon.html %}
					{{ icon.html | safe }}
				{% else %}
					{% set isDefault = true if not icon.src %}
					{% set iconSource = icon.src %}
					{% set iconSourceRetina = icon.retinaSrc or iconSource %}
					{% set iconDescription = icon.alt if not isDefault else beneficiaryAlias + ' icon' %}
					<img class='beneficiary-icon icon' src='{{ iconSource }}' alt='{{ iconDescription }}' width='40' height='40' srcset='{{ iconSourceRetina }} 2x'/>
				{% endif %}
			</a>
		</div>
		<div class='hgroup'>
			{# @TODO Open in a new window only if the beneficiary wants to. #}
			<p class='beneficiary subheading'><a href='{{ beneficiary.href }}' rel='noopener noreferrer' target='_self' class='alias'>{{ beneficiaryAlias }}</a></p>
			<h1 class='heading'>Donations</h1>
		</div>
		{% if headline %}
			<p class='headline'>
				{{ headline | striptags(true) | escape | nl2br }}
			</p>
			{% if not open or open === 'auto' %}
				<a href='#donations' class='internal-link show-donations-button button'>Donate</a>
				<script>
					/* @TODO Move to a file. */
					'use strict';

					(function (mainElement, statesAttributeName) {

						var states = (function parseStatesFromAttribute (element, attributeName) {

							var states = {};
							var attributeValue = element.getAttribute(attributeName);

							try { states = JSON.parse(attributeValue); }
							catch (exception) { console.error(exception); }

							return states;

						})(mainElement, statesAttributeName);
						var STATE_OPEN = states.open;
						var showDonationsButton = mainElement.querySelector('.header .show-donations-button');

						// Remove the open state if it's using js.
						mainElement.classList.remove(STATE_OPEN);

						showDonationsButton.addEventListener('click', function setOpenState (e) {

							this.removeEventListener('click', setOpenState, false);
							mainElement.classList.add(STATE_OPEN);

						}, false);

					})(document.getElementById('donation-box'), 'data-states');
				</script>
			{% endif %}
		{% endif %}
	</header>
	<ol id='donations' class='donations'>
		{% for donation in donations %}
			{% set type = donation.type %}
			{% set href = donation.href %}
			{% set title = donation.title %}
			{% set amounts = donation.amounts %}
			{% if type == 'one-off' %}
				{% set amount = amounts | first %}
				{% set amountHref = amount.href %}
				{% set qr = amount.qr or donation.qr %}
				<li class='donation one-off-donation'>
					{# @FIXME [Nunjucks bug] Calling a macro (using call()/caller()) won't pass variables defined in this scope, inside the call() block. #}
					<a class='external-link' href='{{ amountHref if amountHref else href }}' target='{{ "_blank" if openInNewWindow else "_self" }}' rel='noopener noreferrer'>
						<span class='title'>{{ title }}</span>
						{% if qr %}
							{% set animateQR = qr.animate %}
							{% if not animateQR %}
								{{- buildAmount(amount) | trim -}}
							{% endif %}
							<div class='qr-code-preview-wrapper{{ " animated" if animateQR }}'>
								{% if animateQR %}
									{{ buildElement('img', {
										'class': 'qr-code-preview',
										'src': qr.src,
										'alt': 'QR Code preview',
										'srcset': qr.srcset,
										'width': 20,
										'height': 20
									}) }}
								{% endif %}
								<div class='qr-code-wrapper'>
									{{ buildElement('img', {
										'class': 'qr-code',
										'src': qr.src,
										'alt': qr.alt,
										'srcset': qr.srcset,
										'width': 120,
										'height': 120
									}) }}
								</div>
							</div>
							{% if animateQR %}
								{{- buildAmount(amount) | trim -}}
							{% endif %}
						{% else %}
							{{- buildAmount(amount) | trim -}}
						{% endif %}
					</a>
				</li>
			{% elseif type == 'recurrent' %}
				<li class='donation recurrent-donation'>
					<span class='title'>{{ title }}</span>
					<ul class='quantities'>
						{%- for amount in amounts -%}
							{%- set amountHref = amount.href -%}
							<li class='quantity'>
								<a class='external-link' href='{{ amountHref if amountHref else href }}' target='{{ "_blank" if openInNewWindow else "_self" }}' rel='noopener noreferrer'>
									{{ buildAmount(amount) }}
								</a>
							</li>
						{%- endfor -%}
					</ul>
				</li>
			{% endif %}
		{% endfor %}
	</ol>
	{% if disclaimer %}
		<footer class='footer'>
			<small class='disclaimer'>
				{{ disclaimer | safe }}
			</small>
		</footer>
	{% endif %}
</aside>
